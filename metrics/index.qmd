---
title: "Repository Metrics"
page-layout: full
format:
  html:
    toc: false
---


<div id="metrics-root" style="max-width:1100px;margin:0 auto;padding:0 1rem 3rem 1rem;">
  <h1 style="margin-bottom:0.5rem;">Repository Metrics</h1>
</div>

<script>
(async () => {
  const JSON_URL = "__METRICS_JSON_URL__";
  const root = document.getElementById("metrics-root");

  const METRICS = [
    ["number_of_wsis","Whole-slide images"],["number_of_images","Images"],
    ["number_of_datasets","Datasets"],["cases_uploaded","Cases uploaded"],
    ["biological_beings","Biological beings"],["specimens_uploaded","Specimens uploaded"],
    ["blocks_uploaded","Blocks uploaded"],["number_of_stainings","Stainings"],
    ["observations_uploaded","Observations uploaded"],["annotation_files","Annotation files"],
    ["annotations_uploaded","Annotations uploaded"]
  ];
  const fmt = n => new Intl.NumberFormat(navigator.language||"en-US").format(n);

  const header = (genAt, err) => {
    const msg = err ? `<span style="color:#7f1d1d">${err}</span>`
                    : `Last updated: ${genAt ? new Date(genAt).toLocaleString() : "—"} `;
    return `<div style="opacity:.75;font-size:.9rem;margin:.5rem 0 1rem">${msg}</div>`;
  };

  const cards = (metrics) => {
    const by = new Map((metrics||[]).map(m => [m.name, Number(m.value)]));
    const items = METRICS.map(([k,label])=>{
      const v = by.has(k) && Number.isFinite(by.get(k)) ? fmt(by.get(k)) : "—";
      return `<div style="border:1px solid #e5e7eb;border-radius:14px;padding:18px;box-shadow:0 1px 2px rgba(0,0,0,.04)">
        <div style="font-weight:700;font-size:1.6rem;line-height:1.1">${v}</div>
        <div style="color:#64748b;margin-top:6px;font-size:.95rem">${label}</div>
      </div>`;
    }).join("");
    return `<div style="display:grid;gap:16px;grid-template-columns:repeat(auto-fill,minmax(220px,1fr))">${items}</div>`;
  };

  try {
    const r = await fetch(JSON_URL);
    if (!r.ok) throw new Error(`HTTP ${r.status}`);
    const raw = await r.json();
    const g = raw?.globalMetrics || raw || {};
    root.innerHTML = header(g.generated_at, null) + cards(g.metrics);
  } catch (e) {
    root.innerHTML = header(null, `Unable to load metrics (${e.message||e}).`) + cards(null);
  }
})();
</script>
